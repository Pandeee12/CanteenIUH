{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { AntDesign } from '@expo/vector-icons';\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TextInput } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar YourApp = function YourApp() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    selected = _useState2[0],\n    setSelected = _useState2[1];\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#23235B'\n    },\n    children: [_jsxs(View, {\n      style: {\n        alignItems: 'center',\n        marginTop: 40\n      },\n      children: [_jsx(Text, {\n        style: {\n          color: 'white',\n          fontSize: 26,\n          fontWeight: 'bold'\n        },\n        children: \"PASSWORD\"\n      }), _jsx(Text, {\n        style: {\n          color: 'white',\n          fontSize: 26,\n          fontWeight: 'bold'\n        },\n        children: \"GENERATOR\"\n      })]\n    }), _jsx(View, {\n      style: {\n        borderWidth: 1,\n        backgroundColor: '#151537',\n        width: '90%',\n        height: 56,\n        top: 20,\n        marginLeft: '5%',\n        marginRight: '5%'\n      }\n    }), _jsxs(View, {\n      style: {\n        top: 88,\n        justifyContent: 'center'\n      },\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        children: [_jsx(Text, {\n          style: {\n            marginLeft: '5%',\n            color: 'white',\n            fontSize: 22\n          },\n          children: \"Password lenght\"\n        }), _jsx(View, {\n          style: {\n            borderWidth: 1,\n            backgroundColor: 'white',\n            width: 170,\n            height: 36,\n            left: 20\n          }\n        })]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          top: 30\n        },\n        children: [_jsx(Text, {\n          style: {\n            marginLeft: '5%',\n            color: 'white',\n            fontSize: 22\n          },\n          children: \"Include lower case letters\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setSelected(!selected);\n          },\n          style: {\n            marginLeft: 10,\n            width: 30,\n            height: 30,\n            borderRadius: 15,\n            borderWidth: 2,\n            borderColor: selected ? 'green' : 'gray',\n            backgroundColor: selected ? 'green' : 'transparent',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: selected ? _jsx(Icon, {\n            name: \"check\",\n            size: 20,\n            color: \"white\"\n          }) : null\n        })]\n      })]\n    })]\n  });\n};\nexport default YourApp;","map":{"version":3,"names":["AntDesign","React","Text","View","Image","Button","TouchableOpacity","TextInput","jsx","_jsx","jsxs","_jsxs","YourApp","_useState","useState","_useState2","_slicedToArray","selected","setSelected","style","flex","backgroundColor","children","alignItems","marginTop","color","fontSize","fontWeight","borderWidth","width","height","top","marginLeft","marginRight","justifyContent","flexDirection","left","onPress","borderRadius","borderColor","Icon","name","size"],"sources":["C:/K16_KTPM/Nam4/HK7/TBDD/loginMTC/App.js"],"sourcesContent":["import { AntDesign } from '@expo/vector-icons';\nimport React from 'react';\nimport {Text, View,Image,Button,TouchableOpacity} from 'react-native';\nimport { TextInput } from 'react-native-paper';\nconst YourApp = () => {\n\n  const [selected, setSelected] = useState(false);\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        backgroundColor:'#23235B'\n      }}>\n        <View style={{alignItems: 'center',marginTop: 40}}>\n          <Text style={{color: 'white',fontSize:26,fontWeight:'bold'}}>PASSWORD</Text>\n          <Text style={{color: 'white',fontSize:26,fontWeight:'bold'}}>GENERATOR</Text>\n       </View>\n\n        <View style={{borderWidth: 1,backgroundColor:'#151537',width:'90%',height:56, top:20\n          ,marginLeft:'5%',marginRight:'5%'}}> \n        </View>\n\n        <View style={{top: 88,justifyContent: 'center'}}>\n          <View style={{flexDirection: 'row',alignItems: 'center'}}>\n              <Text style={{marginLeft:'5%',color:'white',fontSize:22}}>Password lenght</Text>\n              <View style={{borderWidth: 1,backgroundColor:'white',width:170,height:36,left: 20}}></View>\n          </View>\n            \n          <View style={{flexDirection: 'row',alignItems: 'center',top:30}}>\n            <Text style={{marginLeft:'5%',color:'white',fontSize:22}}>Include lower case letters</Text>\n            <TouchableOpacity\n    onPress={() => setSelected(!selected)}\n    style={{\n      marginLeft: 10,\n      width: 30,\n      height: 30,\n      borderRadius: 15,\n      borderWidth: 2,\n      borderColor: selected ? 'green' : 'gray',\n      backgroundColor: selected ? 'green' : 'transparent',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }}\n  >\n     {selected ? ( <Icon name=\"check\" size={20} color=\"white\" /> ) : null}\n  </TouchableOpacity>\n          </View>\n        </View>\n    </View>\n  );\n};\n\nexport default YourApp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}